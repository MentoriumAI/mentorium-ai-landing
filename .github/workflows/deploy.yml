name: Deploy to Cloud Run

on:
  push:
    branches:
      - develop       # All commits to develop branch deploy to dev
      - main          # All commits to main branch deploy to prod

env:
  SERVICE_NAME: landing
  IMAGE_NAME: landing
  REGION: us-central1
  DEV_PROJECT_ID: 429971818562
  PROD_PROJECT_ID: 40869640118

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.environment }}
      project_id: ${{ steps.env.outputs.project_id }}
      service_account: ${{ steps.env.outputs.service_account }}
      workload_identity_provider: ${{ steps.env.outputs.workload_identity_provider }}
      artifact_registry: ${{ steps.env.outputs.artifact_registry }}
      service_name: ${{ steps.env.outputs.service_name }}
    steps:
      - name: Determine deployment environment
        id: env
        run: |
          if [[ ${{ github.ref }} == refs/heads/develop ]]; then
            echo "environment=dev" >> $GITHUB_OUTPUT
            echo "project_id=mentorium-ai-dev" >> $GITHUB_OUTPUT
            echo "service_account=cicd-dev-sa@mentorium-ai-dev.iam.gserviceaccount.com" >> $GITHUB_OUTPUT
            echo "workload_identity_provider=projects/${{ env.DEV_PROJECT_ID }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider" >> $GITHUB_OUTPUT
            echo "artifact_registry=us-central1-docker.pkg.dev/mentorium-ai-dev/dev" >> $GITHUB_OUTPUT
            echo "service_name=mentorium-landing-dev" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} == refs/heads/main ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
            echo "project_id=mentorium-ai-prod" >> $GITHUB_OUTPUT
            echo "service_account=cicd-prod-sa@mentorium-ai-prod.iam.gserviceaccount.com" >> $GITHUB_OUTPUT
            echo "workload_identity_provider=projects/${{ env.PROD_PROJECT_ID }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider" >> $GITHUB_OUTPUT
            echo "artifact_registry=us-central1-docker.pkg.dev/mentorium-ai-prod/mentorium-prod" >> $GITHUB_OUTPUT
            echo "service_name=mentorium-landing-prod" >> $GITHUB_OUTPUT
          else
            echo "No deployment environment for this branch: ${{ github.ref }}" >> $GITHUB_OUTPUT
            exit 1
          fi

  build-and-deploy:
    needs: determine-environment
    runs-on: ubuntu-latest
    environment: ${{ needs.determine-environment.outputs.environment }}
    
    permissions:
      contents: read
      id-token: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show deployment info
        run: |
          echo "üöÄ Starting deployment..."
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Environment: ${{ needs.determine-environment.outputs.environment }}"
          echo "Service: ${{ needs.determine-environment.outputs.service_name }}"

      - name: Generate version from commit
        id: version
        run: |
          # Generate version from branch and commit SHA
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          COMMIT_SHA=${GITHUB_SHA:0:7}
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          
          if [[ $BRANCH_NAME == "develop" ]]; then
            VERSION="dev-${TIMESTAMP}-${COMMIT_SHA}"
          elif [[ $BRANCH_NAME == "main" ]]; then
            VERSION="prod-${TIMESTAMP}-${COMMIT_SHA}"
          else
            VERSION="${BRANCH_NAME}-${TIMESTAMP}-${COMMIT_SHA}"
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ needs.determine-environment.outputs.workload_identity_provider }}
          service_account: ${{ needs.determine-environment.outputs.service_account }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as credential helper
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build Docker image
        run: |
          docker build \
            --tag ${{ needs.determine-environment.outputs.artifact_registry }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }} \
            --tag ${{ needs.determine-environment.outputs.artifact_registry }}/${{ env.IMAGE_NAME }}:latest \
            .

      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${{ needs.determine-environment.outputs.artifact_registry }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          docker push ${{ needs.determine-environment.outputs.artifact_registry }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ needs.determine-environment.outputs.service_name }} \
            --image=${{ needs.determine-environment.outputs.artifact_registry }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }} \
            --region=${{ env.REGION }} \
            --platform=managed \
            --port=80 \
            --cpu=1 \
            --memory=512Mi \
            --min-instances=0 \
            --max-instances=${{ needs.determine-environment.outputs.environment == 'prod' && '5' || '3' }} \
            --concurrency=1000 \
            --timeout=300 \
            --cpu-throttling \
            --execution-environment=gen2 \
            --service-account=${{ needs.determine-environment.outputs.service_account }} \
            --set-env-vars="ENVIRONMENT=${{ needs.determine-environment.outputs.environment }}" \
            --allow-unauthenticated \
            --quiet

      - name: Update service traffic
        run: |
          gcloud run services update-traffic ${{ needs.determine-environment.outputs.service_name }} \
            --to-latest \
            --region=${{ env.REGION }}

      - name: Get service URL
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ needs.determine-environment.outputs.service_name }} \
            --region=${{ env.REGION }} \
            --format="value(status.url)")
          echo "Service deployed at: $SERVICE_URL"

  notify-deployment:
    needs: [determine-environment, build-and-deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Deployment notification
        run: |
          if [[ "${{ needs.build-and-deploy.result }}" == "success" ]]; then
            echo "‚úÖ Successfully deployed ${{ env.SERVICE_NAME }} to ${{ needs.determine-environment.outputs.environment }}"
            echo "Branch: ${{ github.ref_name }}"
            echo "Commit: ${{ github.sha }}"
            echo "Version: ${{ needs.build-and-deploy.outputs.version || 'latest' }}"
            echo "Environment: ${{ needs.determine-environment.outputs.environment }}"
          else
            echo "‚ùå Deployment failed for ${{ env.SERVICE_NAME }} to ${{ needs.determine-environment.outputs.environment }}"
            echo "Branch: ${{ github.ref_name }}"
            echo "Commit: ${{ github.sha }}"
            exit 1
          fi